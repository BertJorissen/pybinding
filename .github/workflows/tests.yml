name: tests and publish

on: [push]
permissions:
  contents: write

jobs:
  test-build-1:
    name: Test Build on Ubuntu with Python 3.10
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install dependencies for Pybinding
        run: python -m pip install wheel scipy matplotlib pytest cmake ninja
      - name: ccache
        uses: hendrikmuhs/ccache-action@v1
      - name: Build with CMake and test Python / C++
        timeout-minutes: 10
        run: mkdir build_tests && cd build_tests && cmake .. && cmake --build . --target tests --config Release

  test-build-all:
    name: Test Build on ${{ matrix.os }} with Python ${{ matrix.python-version }}
    needs: test-build-1
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest, macos-latest ]
        python-version: [ "3.10" ]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies Pybinding
        run: python -m pip install wheel scipy matplotlib pytest cmake ninja
      - name: Set up MSVC
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1
      - name: ccache
        uses: hendrikmuhs/ccache-action@v1
      - name: Build with CMake and test Python / C++
        timeout-minutes: 10
        run: mkdir build_tests && cd build_tests && cmake .. && cmake --build . --target tests --config Release

  pip-build-1:
    name: Test pip on Ubuntu with Python 3.10
    needs: test-build-1
    runs-on: ubuntu-latest
    env:
      PB_BUILD_TYPE: Release
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install dependencies for Pybinding
        run: python -m pip install wheel scipy matplotlib pytest cmake ninja
      - name: ccache
        uses: hendrikmuhs/ccache-action@v1
      - name: Build with pip
        run: python -m pip install .
      - name: Test Python
        run: python -c "import pybinding as pb; exit(pb.tests())"

  pip-build-all:
    name: Test pip on ${{ matrix.os }} with Python ${{ matrix.python-version }}
    needs: [test-build-1, test-build-all, pip-build-1]
    runs-on: ${{ matrix.os }}
    env:
      PB_BUILD_TYPE: Release
    strategy:
      matrix:
        os: [ windows-latest, macos-latest ]
        python-version: [ "3.10" ]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies Pybinding
        run: python -m pip install wheel scipy matplotlib pytest cmake ninja
      - name: Set up MSVC
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1
      - name: ccache
        uses: hendrikmuhs/ccache-action@v1
      - name: Build with pip
        run: python -m pip install .
      - name: Test Python
        run: python -c "import pybinding as pb; exit(pb.tests())"

  documentation:
    name: Make and upload the documentation
    needs: [test-build-1, test-build-all, pip-build-1, pip-build-all]
    runs-on: ubuntu-latest
    env:
      PB_BUILD_TYPE: Release
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - name: Install dependencies Pybinding
      run: python -m pip install wheel scipy matplotlib pytest cmake ninja sphinx-rtd-theme recommonmark numpydoc nbconvert
    - name: ccache
      uses: hendrikmuhs/ccache-action@v1
    - name: Test Documentation
      run: mkdir build_tests && cd build_tests && cmake .. && cmake --build . --target docs && ls && pwd && touch docs/html/.nojekyll
    - name: Publish docs
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        folder: build_tests/docs/html
